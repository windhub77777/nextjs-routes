// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`route generation typescript 1`] = `
"// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.'
// Run \`yarn nextjs-routes\` to regenerate this file.

type NextUrl<
  Pathname extends string = string,
  Query = Record<string, never>
> = Partial<URL> & Query extends Record<string, never>
  ?
      | {
          pathname: Pathname;
          query?: Query;
        }
      | Pathname
  : {
      pathname: Pathname;
      query: Query;
    };

type Routes =
  | NextUrl<'/404'>
  | NextUrl<'/[foo]', { foo: string; }>
  | NextUrl<'/[foo]/[bar]/[baz]', { foo: string; bar: string; baz: string; }>
  | NextUrl<'/[foo]/bar/[baz]', { foo: string; baz: string; }>
  | NextUrl<'/[foo]/bar/[baz]/foo/[bar]', { foo: string; baz: string; bar: string; }>
  | NextUrl<'/[foo]/baz', { foo: string; }>
  | NextUrl<'/_debug/health-check'>
  | NextUrl<'/_error/'>
  | NextUrl<'/api/[[...segments]]', { segments?: string[]; }>
  | NextUrl<'/api/[...segments]', { segments: string[]; }>
  | NextUrl<'/api/bar'>
  | NextUrl<'/foo/[slug]', { slug: string; }>
  | NextUrl<'/'>
  | NextUrl<'/not-found'>
  | NextUrl<'/settings/bars/[bar]', { bar: string; }>
  | NextUrl<'/settings/bars/[bar]/baz', { bar: string; }>
  | NextUrl<'/settings/foo'>
  | NextUrl<'/settings/'>

declare module \\"next/link\\" {
  import type { LinkProps as NextLinkProps } from \\"next/link\\";
  import type { PropsWithChildren, MouseEventHandler } from \\"react\\";

  interface LinkProps extends Omit<NextLinkProps, \\"href\\"> {
    href: Routes;
  }

  declare function Link(
    props: PropsWithChildren<LinkProps>
  ): DetailedReactHTMLElement<
    {
      onMouseEnter?: MouseEventHandler<Element> | undefined;
      onClick: MouseEventHandler;
      href?: string | undefined;
      ref?: any;
    },
    HTMLElement
  >;

  export default Link;
}

declare module \\"next/router\\" {
  import type { NextRouter } from \\"next/router\\";

  type TransitionOptions = Parameters<NextRouter[\\"push\\"]>[2];

  interface Router extends Omit<NextRouter, \\"push\\" | \\"replace\\"> {
    push(
      url: Routes,
      as?: Routes,
      options?: TransitionOptions
    ): Promise<boolean>;
    replace(
      url: Routes,
      as?: Routes,
      options?: TransitionOptions
    ): Promise<boolean>;
  }

  export function useRouter(): Router;
}

"
`;
